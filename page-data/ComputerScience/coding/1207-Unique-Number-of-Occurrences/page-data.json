{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/ComputerScience/coding/1207-Unique-Number-of-Occurrences/","result":{"pageContext":{"article":{"banner":{"alt":"","caption":"","src":null},"body":"<blockquote>\n<h2>💡  <strong>Situation</strong></h2>\n</blockquote>\n<p>숫자 리스트의 중복되는 숫자가 유일한지 확인하는 문제.\r\n<a href=\"https://leetcode.com/problems/unique-number-of-occurrences/description/?envType=study-plan-v2&#x26;envId=leetcode-75\">https://leetcode.com/problems/unique-number-of-occurrences/description/?envType=study-plan-v2&#x26;envId=leetcode-75</a></p>\n<blockquote>\n<h2>📋 <strong>Task</strong></h2>\n</blockquote>\n<ul>\n<li>Dictionary 사용</li>\n<li>set() 사용</li>\n<li>len() 사용</li>\n<li>개선 가능한지 확인하기</li>\n</ul>\n<blockquote>\n<h2>👨‍💻 <strong>Action</strong></h2>\n</blockquote>\n<p>C++ 처럼 변수의 증가 연산자(++)를 쓰고 싶었지만 다른 방법을 사용해야 했다.</p>\n<blockquote>\n<p><em><strong>MAP[변수] += 1</strong></em></p>\n<p>leetcode 안에서는 동작하지 않는 것 같다.</p>\n</blockquote>\n<blockquote>\n<p><em><strong>MAP.get(변수,0) + 1</strong></em></p>\n<p>많이 쓰이는 방법이고, 0이 의미는 조회하는 키의 값이 존재하지 않으면\r\n반환할 default 값이다.\r\n<strong>get</strong>(<em>key</em>[, <em>default</em>])</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">uniqueOccurrences</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\r\n        submap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">:</span>\r\n            submap<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> submap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>submap<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>submap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<blockquote>\n<h2>🗽 <strong>Result</strong></h2>\n</blockquote>\n<p>처음 푼 결과는 아래와 같았다.</p>\n<p><img src=\"https://prod-files-secure.s3.us-west-2.amazonaws.com/4af44c55-bb9f-4a14-af4e-55648b227811/92a5eb26-4c4d-4e60-97f9-ef634d84230e/Untitled.png\" alt=\"Untitled\"></p>\n<p>그리고, 코드 개선을 시도하던 중 Counter의 존재를 알게 되었는데,\r\n자세히 쓰임 확인하다 보니, 결론적으로 Collections.Counter를 쓰는 문제였다.</p>\n<p>다시 풀어본 코드와 결과는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">uniqueOccurrences</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\r\n        occurrence_counts <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>occurrence_counts<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>occurrence_counts<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://prod-files-secure.s3.us-west-2.amazonaws.com/4af44c55-bb9f-4a14-af4e-55648b227811/6bf19000-1e7f-4369-8b94-e537baeee695/Untitled.png\" alt=\"Untitled\"></p>\n<p>아래 Counter에 대한 설명을 조사하였다.</p>\n<blockquote>\n<p><strong>Collectoins.Counter 정의</strong></p>\n<p>**<code class=\"language-text\">collections.Counter</code>**는 파이썬의 내장 클래스로, 요소의 발생 횟수를 세는 데 사용됩니다. 이 클래스는 반복 가능한(iterable) 객체(예: 리스트, 문자열)의 각 요소에 대한 발생 횟수를 쉽게 계산하고 딕셔너리 형태로 제공합니다.</p>\n<p>다음은 **<code class=\"language-text\">Counter</code>**의 주요 기능과 사용법입니다:</p>\n<ol>\n<li>\n<p><strong>Counter 객체 생성:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\r\n\r\nmy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\r\nmy_counter <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><strong>요소의 발생 횟수 확인:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_counter<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 출력: 2 (숫자 2의 발생 횟수)</span></code></pre></div>\n</li>\n<li>\n<p><strong>모든 요소의 발생 횟수 확인:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_counter<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 출력: Counter({3: 3, 2: 2, 1: 1})</span></code></pre></div>\n</li>\n<li>\n<p><strong>딕셔너리처럼 사용:<code class=\"language-text\">Counter</code></strong> 객체는 딕셔너리와 유사하게 동작하며, 키와 값으로 이루어진 쌍으로 구성됩니다. 다만, **<code class=\"language-text\">Counter</code>**는 키에 해당하는 요소의 발생 횟수를 값으로 가지고 있습니다.</p>\n</li>\n<li>\n<p><strong>most_common 메서드:<code class=\"language-text\">most_common(n)</code></strong> 메서드는 가장 빈번하게 등장하는 상위 n개의 요소를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_counter<span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 출력: [(3, 3), (2, 2)]</span></code></pre></div>\n</li>\n<li>\n<p><strong>업데이트:<code class=\"language-text\">Counter</code></strong> 객체끼리 합칠 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">another_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\nmy_counter<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>another_list<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_counter<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 출력: Counter({3: 5, 2: 3, 1: 1, 4: 1})</span></code></pre></div>\n</li>\n</ol>\n<p>**<code class=\"language-text\">Counter</code>**는 매우 편리한 도구로, 요소의 발생 횟수를 쉽게 계산하고 분석하는 데 사용됩니다. 위에서 보여준 <strong><code class=\"language-text\">uniqueOccurrences</code></strong> 함수에서도 **<code class=\"language-text\">Counter</code>**를 사용하여 발생 횟수를 세고 있습니다.</p>\n</blockquote>\n<p>Counter를 통해 발생 횟수를 확인하는 용도로 좋다는걸 알게 되었고</p>","categories":["Computer Science","Coding"],"date":"January 21, 2024","description":"Solve <1207. Unique Number of Occurrences>","id":"d3a90e75-544d-579a-be95-47bcd635510a","keywords":["Hash Table","String","Sorting","Counting"],"slug":"/ComputerScience/coding/1207-Unique-Number-of-Occurrences/","title":"1207. Unique Number of Occurrences","readingTime":{"text":"4 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1572444355","1764120992","2636236428","2709378673","3262260831","3584947626","4042740421","540466502","597217301","948380417"],"slicesMap":{}}