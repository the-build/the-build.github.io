{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/ComputerScience/coding/206-Reverse-Linked-List/","result":{"pageContext":{"article":{"banner":{"alt":"","caption":"","src":null},"body":"<aside>\n<blockquote>\n<h2>💡 <strong>Situation</strong></h2>\n</blockquote>\n</aside>\n<p>리스트 노드를 역순환 시키면 되는 문제.</p>\n<aside>\n<blockquote>\n<h2>📋 <strong>Task</strong></h2>\n</blockquote>\n</aside>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled>  TreeNode 때 처럼 재귀함수 사용하기</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled>  List.reversed() 함수 사용하기</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled>  class 변수 사용하여 응답값 만들기</li>\n</ul>\n<aside>\n<blockquote>\n<h2>🧑‍💻 <strong>Action</strong></h2>\n</blockquote>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Definition for singly-linked list.</span>\r\n<span class=\"token comment\"># class ListNode:</span>\r\n<span class=\"token comment\">#     def __init__(self, val=0, next=None):</span>\r\n<span class=\"token comment\">#         self.val = val</span>\r\n<span class=\"token comment\">#         self.next = next</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">reverseList</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span>ListNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Optional<span class=\"token punctuation\">[</span>ListNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n\t\t\t\t<span class=\"token comment\">#EN. It needs for 'reversed()'</span>\r\n\t\t\t\t<span class=\"token comment\">#KR. 역순환하기 위한 변수</span>\r\n        valArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\n\t\t\t\t<span class=\"token comment\">#EN. Creating a function to operate recursively</span>\r\n\t\t\t\t<span class=\"token comment\">#KR. 재귀하기 위한 함수 작성</span>\r\n        <span class=\"token keyword\">def</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span>ListNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">if</span> head <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n                <span class=\"token keyword\">return</span>\r\n            valArr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span>\r\n            func1<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">)</span>\r\n\r\n        func1<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span>\r\n\r\n        dummy <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        current <span class=\"token operator\">=</span> dummy\r\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>valArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n            current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\r\n            current <span class=\"token operator\">=</span> current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\r\n\r\n        <span class=\"token keyword\">return</span> dummy<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span></code></pre></div>\n<aside>\n<blockquote>\n<h2>🗽 <strong>Result</strong></h2>\n</blockquote>\n</aside>\n<p><img src=\"https://prod-files-secure.s3.us-west-2.amazonaws.com/4af44c55-bb9f-4a14-af4e-55648b227811/912f390e-9b49-4f0b-bffc-e9c62dff185f/Untitled.png\" alt=\"Untitled\"></p>","categories":["Computer Science","Coding"],"date":"February 01, 2024","description":"Solve <206. Reverse Linked List>","id":"ef944458-bc35-542c-8fbb-bb812844dda1","keywords":["Linked List"],"slug":"/ComputerScience/coding/206-Reverse-Linked-List/","title":"206. Reverse Linked List","readingTime":{"text":"1 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1572444355","1764120992","2636236428","2709378673","3262260831","3584947626","4042740421","540466502","597217301","948380417"],"slicesMap":{}}