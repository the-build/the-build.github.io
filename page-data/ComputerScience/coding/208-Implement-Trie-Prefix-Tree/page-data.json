{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/ComputerScience/coding/208-Implement-Trie-Prefix-Tree/","result":{"pageContext":{"article":{"banner":{"alt":"","caption":"","src":null},"body":"<aside>\n<blockquote>\n<h2>üí° <strong>Situation</strong></h2>\n</blockquote>\n</aside>\n<aside>\n<blockquote>\n<h2>üìã <strong>Task</strong></h2>\n</blockquote>\n</aside>\n<aside>\n<blockquote>\n<h2>üßë‚Äçüíª <strong>Action</strong></h2>\n</blockquote>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Trie</span><span class=\"token punctuation\">:</span>\r\n    strArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n\t\t\t\tself<span class=\"token punctuation\">.</span>strArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>strArr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\r\n        \r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>strArr<span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> word<span class=\"token punctuation\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span> \r\n        \r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prefix<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>strArr<span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\r\n                \r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\r\n\r\n<span class=\"token operator\">//</span>obj <span class=\"token operator\">=</span> Trie<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">//</span> null\r\n<span class=\"token operator\">//</span> obj<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> null\r\n<span class=\"token operator\">//</span> obj<span class=\"token punctuation\">.</span>search <span class=\"token operator\">//</span> true<span class=\"token punctuation\">,</span> false\r\n</code></pre></div>\n<aside>\n<blockquote>\n<h2>üóΩ <strong>Result</strong></h2>\n</blockquote>\n</aside>\n<p><img src=\"https://prod-files-secure.s3.us-west-2.amazonaws.com/4af44c55-bb9f-4a14-af4e-55648b227811/cfabab74-84db-4e53-be15-f1e0cb3fd59e/Untitled.png\" alt=\"Untitled\"></p>","categories":["Computer Science","Coding"],"date":"February 15, 2024","description":"Solve <208. Implement Trie (Prefix Tree)>","id":"ce7ea3c0-d3a2-5dd3-8996-f1b7e3650538","keywords":["Hash Table","String"],"slug":"/ComputerScience/coding/208-Implement-Trie-Prefix-Tree/","title":"208. Implement Trie (Prefix Tree)","readingTime":{"text":"1 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1572444355","1764120992","2636236428","2709378673","3262260831","3584947626","4042740421","540466502","597217301","948380417"],"slicesMap":{}}